pipeline {
    agent any

    environment {
        IMAGE_NAME = "simple-calculator"
        IMAGE_TAG  = "3.0"
    }

    stages {
        stage('Checkout Code for Git') {
            steps {
                git branch: 'master',
                    url: 'https://github.com/SurendraImmanni/simple-calc.git'
            }
        }

        stage('SonarQube Analysis') {
            environment {
                scannerHome = tool 'sonar-jenkins'  // Jenkins configured SonarQube scanner
            }
            steps {
                withSonarQubeEnv('SonarQube') {     // SonarQube server name from Jenkins config
                    withCredentials([string(credentialsId: 'SONAR_AUTH_TOKEN', variable: 'SONAR_AUTH_TOKEN')]) {
                        sh """
                            ${scannerHome}/bin/sonar-scanner \
                              -Dsonar.projectKey=web-calculator \
                              -Dsonar.sources=. \
                              -Dsonar.host.url=http://15.207.80.31:9000 \
                              -Dsonar.token=${SONAR_AUTH_TOKEN}
                        """
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'dockerhub-creds',
                    usernameVariable: 'DOCKERHUB_USER',
                    passwordVariable: 'DOCKERHUB_PASSWORD'
                )]) {
                    sh """
                        echo "DEBUG -> Building image: ${DOCKERHUB_USER}/${IMAGE_NAME}:${IMAGE_TAG}"
                        docker build -t ${DOCKERHUB_USER}/${IMAGE_NAME}:${IMAGE_TAG} .
                    """
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'dockerhub-creds',
                    usernameVariable: 'DOCKERHUB_USER',
                    passwordVariable: 'DOCKERHUB_PASSWORD'
                )]) {
                    sh """
                        echo "DEBUG -> Pushing image: ${DOCKERHUB_USER}/${IMAGE_NAME}:${IMAGE_TAG}"
                        echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USER}" --password-stdin
                        docker push ${DOCKERHUB_USER}/${IMAGE_NAME}:${IMAGE_TAG}
                    """
                }
            }
        }

        stage('Deploy to Kubernetes k3s') {
            steps {
                sh """
                    echo "DEBUG -> Deploying to k3s cluster..."
                    kubectl cluster-info

                    # Update deployment image if it exists, else apply fresh manifests
                    kubectl set image deployment/simple-calculator \
                        simple-calculator=${DOCKERHUB_USER}/${IMAGE_NAME}:${IMAGE_TAG} --record || \
                    kubectl apply -f deployment.yml

                    kubectl apply -f srvc.yml

                    # Ensure rollout is successful
                    kubectl rollout status deployment/simple-calculator
                """
            }
        }
    }
}
